name: Workflow para a camada de bootstrap
# Este workflow é responsável por aplicar o bootstrap da infraestrutura usando o Terraform.
# Deve ser acionado a primeira vez de forma manual, e depois disso, deve ser acionado automaticamente quando houver um push na branch main.

on:
  workflow_call:
    inputs:
      TF_WORKDIR:
        required: true
        type: string
      TF_VAR_PROJECT_ID:
        required: true
        type: string
      TF_VAR_PROJECT_NUMBER:
        required: true
        type: string
      TF_VAR_PROJECT_REGION:
        required: true
        type: string
      TF_VAR_PROJECT_ZONE:
        required: true
        type: string
      TF_VAR_BOOTSTRAP_STATE_BUCKET_NAME:
        required: true
        type: string
      TF_VAR_ARTIFACT_REGISTRY_REPOSITORY_NAME:
        required: true
        type: string
      TF_VAR_GITHUB_REPO:
        required: true
        type: string
      TF_VAR_GITHUB_POOL:
        required: true
        type: string
      TF_VAR_GITHUB_PROVIDER:
        required: true
        type: string

# Ativa o uso de OIDC no workflow do GitHub Actions
permissions:
  id-token: write
  contents: read

env:
  TF_VAR_PROJECT_ID: ${{ inputs.TF_VAR_PROJECT_ID }}
  TF_VAR_PROJECT_NUMBER: ${{ inputs.TF_VAR_PROJECT_NUMBER }}
  TF_VAR_PROJECT_REGION: ${{ inputs.TF_VAR_PROJECT_REGION }}
  TF_VAR_PROJECT_ZONE: ${{ inputs.TF_VAR_PROJECT_ZONE }}
  TF_VAR_BOOTSTRAP_STATE_BUCKET_NAME: ${{ inputs.TF_VAR_BOOTSTRAP_STATE_BUCKET_NAME }}
  TF_VAR_ARTIFACT_REGISTRY_REPOSITORY_NAME: ${{ inputs.TF_VAR_ARTIFACT_REGISTRY_REPOSITORY_NAME }}
  TF_VAR_GITHUB_REPO: ${{ inputs.TF_VAR_GITHUB_REPO }}
  TF_VAR_GITHUB_POOL: ${{ inputs.TF_VAR_GITHUB_POOL }}
  TF_VAR_GITHUB_PROVIDER: ${{ inputs.TF_VAR_GITHUB_PROVIDER }}

jobs:
  apply-bootstrap:
    runs-on: ubuntu-latest
    steps:
      # Autenticação com Google Cloud usando Workload Identity Federation
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0.4.0'
        with:
          workload_identity_provider: 'projects/${{ inputs.TF_VAR_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ inputs.TF_VAR_GITHUB_POOL }}/providers/${{ inputs.TF_VAR_GITHUB_PROVIDER }}'
          service_account: 'github-actions-sa@${{ inputs.TF_VAR_PROJECT_ID }}.iam.gserviceaccount.com'
          audience: 'https://iam.googleapis.com/projects/${{ inputs.TF_VAR_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ inputs.TF_VAR_GITHUB_POOL }}/providers/${{ inputs.TF_VAR_GITHUB_PROVIDER }}'

      # Checkout do código
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8

      - name: Terraform Init
        run: |
          cd ${{ inputs.TF_WORKDIR }}
          terraform init

      - name: Terraform Validate
        run: |
          cd ${{ inputs.TF_WORKDIR }}
          terraform validate

      - name: Terraform Plan
        run: |
          cd ${{ inputs.TF_WORKDIR }}
          terraform plan -out=tfplan

      - name: Terraform Apply
        run: |
          cd ${{ inputs.TF_WORKDIR }}
          terraform apply -auto-approve tfplan