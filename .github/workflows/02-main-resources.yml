name: Workflow para a camada infra-dev

on:
  workflow_call:
    inputs:
      TF_WORKDIR:
        required: true
        type: string
      ENV_NAME:
        required: true
        type: string
      GH_ACTIONS_SERVICE_ACCOUNT_EMAIL:
        required: true
        type: string

# Ativa o uso de OIDC no workflow do GitHub Actions
permissions:
  id-token: write
  contents: read

jobs:
  apply-infra-dev:
    runs-on: ubuntu-latest
    environment: ${{ inputs.ENV_NAME }}
    env:
      TF_VAR_PROJECT_ID: ${{ vars.TF_VAR_PROJECT_ID }}
      TF_VAR_PROJECT_REGION: ${{ vars.TF_VAR_PROJECT_REGION }}
      TF_VAR_PROJECT_ZONE: ${{ vars.TF_VAR_PROJECT_ZONE }}
      TF_VAR_DB_INSTANCE_NAME: ${{ vars.TF_VAR_DB_INSTANCE_NAME }}
      TF_VAR_DATABASE: ${{ vars.TF_VAR_DATABASE }}
      TF_VAR_DB_USERNAME: ${{ vars.TF_VAR_DB_USERNAME }}
      TF_VAR_DB_PASSWORD: ${{ vars.TF_VAR_DB_PASSWORD }}
      TF_VAR_DB_EDITION: ${{ vars.TF_VAR_DB_EDITION }}
      TF_VAR_DB_VERSION: ${{ vars.TF_VAR_DB_VERSION }}
      TF_VAR_DB_TIER: ${{ vars.TF_VAR_DB_TIER }}
      TF_VAR_DB_DELETION_PROTECTION: ${{ vars.TF_VAR_DB_DELETION_PROTECTION }}
      TF_VAR_GKE_CLUSTER_NAME: ${{ vars.TF_VAR_GKE_CLUSTER_NAME }}
      TF_VAR_GKE_INITIAL_NODE_COUNT: ${{ vars.TF_VAR_GKE_INITIAL_NODE_COUNT }}
      TF_VAR_GKE_NODE_MACHINE_TYPE: ${{ vars.TF_VAR_GKE_NODE_MACHINE_TYPE }}
      TF_VAR_GKE_PREEMPTIBLE: ${{ vars.TF_VAR_GKE_PREEMPTIBLE }}
      TF_VAR_GKE_NODE_POOL_NAME: ${{ vars.TF_VAR_GKE_NODE_POOL_NAME }}
      TF_VAR_GH_ACTIONS_SERVICE_ACCOUNT_EMAIL: ${{ inputs.GH_ACTIONS_SERVICE_ACCOUNT_EMAIL }}

    steps:
      # Checkout do código
      - name: Checkout source code
        uses: actions/checkout@v4

      # Autenticação com Google Cloud usando Workload Identity Federation
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: 'projects/${{ vars.TF_VAR_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ vars.TF_VAR_GIT_POOL }}/providers/${{ vars.TF_VAR_GIT_PROVIDER }}'
          service_account: 'github-actions-sa@${{ vars.TF_VAR_PROJECT_ID }}.iam.gserviceaccount.com'

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8

      - name: Terraform Init
        run: |
          cd ${{ inputs.TF_WORKDIR }}
          terraform init

      - name: Terraform Validate
        run: |
          cd ${{ inputs.TF_WORKDIR }}
          terraform validate

      - name: Terraform Plan
        run: |
          cd ${{ inputs.TF_WORKDIR }}
          terraform plan -out=tfplan

      - name: Terraform Apply
        run: |
          cd ${{ inputs.TF_WORKDIR }}
          terraform apply -auto-approve tfplan